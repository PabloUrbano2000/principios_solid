CONCEPTO DEUDA TÉCNICA

Es la falta de calidad en el código, que genera una deuda que repercutirá en 
costos futuros.

Costos económicos:
- Tiempo en realizar mantenimientos.
- Tiempo en refactorizar código.
- Tiempo en comprender el código.
- Tiempo adicional en la transferencia del código.


Cuadrante de deuda técnica:
1. Imprudente
No hay tiempo, sólo copia y pega eso de nuevo.

2. Imprudente y inadvertida
"¿Qué son patrones de diseños?", suele pasar por juniors o falso senior.

3. Prudente
Tenemos que entregar rápido, ya refactorizaremos.

4. Prudente e inadvertida
"Ahora sabemos cómo lo deberíamos haber hecho"

¿Solución?
REFACTORIZACIÓN:
Usualmente para que una refactorización fuerte tenga el objetivo
esperado, es imprescindible contar con pruebas automáticas.

Usualmente esto produce el famoso: "Si funciona, no lo toques"

La mala calidad en el software siempre la acaba pagando o asumiendo alguien.

Ya sea el cliente, el proveedor con recursos o el propio desarrollador 
dedicando tiempo a refactorizar o malgastando tiempo programando
sobre un sistema frágil.

"Código Limpio es aquel que se ha escrito con la intención de que
otra persona (o tú mismo en el futuro) lo entienda." - Carlos Blé

"Nuestro código tiene que ser simple y directo, debería leerse con
la misma facilidad que un texto bien escrito." - Grady Booch

"Programar es el arte de decirle a otro humano lo que quieres que 
la computadora haga." - Donald Knuth
